// 字型
$main-font: "Noto Sans TC", "Helvetica Neue", "PingFang TC", "Heiti TC", "Adobe 繁黑體 Std", "AdobeFanHeitiStd-Bold",
  "微軟正黑體", sans-serif;

// 字級
$font-size-thin: 0.65rem;
$font-size-light: 0.85rem;
$font-size-regular: 16px;
$font-size-medium: 1.2rem;
$font-size-bold: 1.4rem;
$font-size-black: 1.6rem;

// 字重
$font-weight-thin: 100;
$font-weight-light: 300;
$font-weight-regular: 400;
$font-weight-medium: 500;
$font-weight-bold: 700;
$font-weight-black: 900;

// 基本色彩
$color-white: #ffffff;
$color-black: #000000;
$color-green: #1db494;
$color-yellow: #fedc19;
$color-orange: #ff9900;
$color-red: #e80012;
$color-brown: #a86454;
$color-blue: #0063ff;
$color-pink: #d0104c;
$color-gray-thin: #dbdbdb;
$color-gray-light: #b3b3b3;
$color-gray: #687885;
$color-gray-medium: #343c42;
$color-gray-deep: #181818;

// 功能色彩
$color-main: $color-blue;
$color-site-bg: #ececec;
$color-button: $color-main;

// 邊框
$border-radius: 1rem;
$border-radius-round: 99em;

// 層級
$layer-lv0: -1;
$layer-lv1: 5;
$layer-lv2: 10;
$layer-lv3: 100;
$layer-lv4: 150; // 導覽列高度基準
$layer-lv5: 200;
$layer-lv6: 250;

// 動畫
$transition-fast: all 0.3s ease-in-out;
$transition-normal: all 0.5s ease-in-out;
$transition-slow: all 0.7s ease-in-out;

// 區塊功能
$grid-gap: 1.25rem;
$grid-width: calc(calc(1920px - calc(#{$grid-gap}* 21)) / 20); // 單一格寬度

$navbar-height: 2.5rem;
$footer-height: $navbar-height;

// 斷點
@mixin breakpoint-xxl() {
  @media (max-width: 1400px) {
    @content;
  }
}

@mixin breakpoint-xl() {
  @media (max-width: 1200px) {
    @content;
  }
}

@mixin breakpoint-lg() {
  @media (max-width: 992px) {
    @content;
  }
}

@mixin breakpoint-md() {
  @media (max-width: 768px) {
    @content;
  }
}

@mixin breakpoint-sm() {
  @media (max-width: 576px) {
    @content;
  }
}

@mixin breakpoint-esm() {
  @media (max-width: 320px) {
    @content;
  }
}

// 常用設定
@mixin fixed-object() {
  position: fixed;
  -webkit-overflow-scrolling: touch;
}

@mixin list-style() {
  list-style: none;
  margin: 0;
  padding: 0;
}

@mixin link-style() {
  text-decoration: none;
  cursor: pointer;

  &:hover {
    text-decoration: none;
    @content;
  }
}

@mixin flex-arrangement($number) {
  width: calc(calc(100% - #{$grid-gap}* #{$number - 1}) / #{$number});
  margin-right: $grid-gap;

  &:nth-of-type(#{$number}n),
  &:last-of-type {
    margin-right: 0;
  }

  &:nth-of-type(n + #{$number + 1}) {
    margin-top: $grid-gap;
  }
}
